//
//  CalculatorModels.swift
//  MVVM_VS_VIP
//
//  Created by Papon Supamongkonchai on 7/4/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum CalculatorModel
{
    // MARK: Use cases
    enum TypeOperations:String {
        case plus = "+"
        case minus = "-"
        case multiply = "*"
        case divide = "/"
        case null = ""
    }
    
    enum Plus
    {
        struct Request
        {
            var number1 : Int
            var number2 : Int
            var precalNumber : Int {
                return number1 + number2
            }
        }
        struct Response
        {
            var preCalResultNumber : Int
        }
        struct ViewModel
        {
            var resultPlusNumber : String
        }
    }
    
    enum Minus
    {
        struct Request
        {
            var number1 : Int
            var number2 : Int
            var precalNumber : Int {
                return number1 - number2
            }
        }
        struct Response
        {
            var preCalResultNumber : Int
        }
        struct ViewModel
        {
            var resultMinusNumber : String
        }
    }
    
    enum Multiply
    {
        struct Request
        {
            var number1 : Int
            var number2 : Int
            var precalNumber : Int {
                return number1 * number2
            }
        }
        struct Response
        {
            var preCalResultNumber : Int
        }
        struct ViewModel
        {
            var resultMultiplyNumber : String
        }
    }
    
    enum Divide
    {
        struct Request
        {
            var number1 : Int
            var number2 : Int
            var precalNumber : Int {
                return number1 / number2
            }
        }
        struct Response
        {
            var preCalResultNumber : Int
        }
        struct ViewModel
        {
            var resultDivideNumber : String
        }
    }
    
    enum Equal
    {
        struct Response
        {
            var preCalResultNumber : Int
        }
        struct ViewModel
        {
            var resultNumber : String
        }
    }
    
}
